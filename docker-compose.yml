services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-amj_doc_db}
      POSTGRES_USER: ${DB_USER:-amj_doc_db_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-m3_f1le_7!}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USER:-amj_doc_db_user} -d $${DB_NAME:-amj_doc_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: eamanze/backend:latest
    command: > 
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "8000:8000"
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:alpine
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  celery-default:
    image: eamanze/backend:latest
    command: celery -A auth worker --loglevel=info -Q default --without-gossip --without-heartbeat --without-mingle
    env_file:
      - ./.env.backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - backend

  celery-text-processor:
    image: eamanze/backend:latest
    command: celery -A auth worker --loglevel=info -Q text-processor --without-gossip --without-heartbeat --without-mingle
    env_file:
      - ./.env.backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - backend

  frontend:
    image: eamanze/frontend:latest
    ports:
      - "3000:3000"
    command: npm run dev
    env_file:
      - ./.env.frontend
    networks:
      - backend
    depends_on:
      - backend

  aifastapi:
    image: eamanze/aifastapi:latest
    command: uvicorn server:app --host 0.0.0.0 --port 8010 --reload
    ports:
      - "8010:8010"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    env_file:
      - ./.env.aifastapi
    depends_on:
      - redis
      - postgres
    networks:
      - backend

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  postgres_data: